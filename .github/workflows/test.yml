name: CI
on:
  push:
    branches:
      - dev
  workflow_dispatch:
#  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Hello, World!"
#      - name: 上传编译结果到 pre-release (Upload build result to pre-release)
#        uses: ncipollo/release-action@v1
#        with:
#          tag: v4.0.4
#          allowUpdates: true
#          removeArtifacts: true
#          artifacts: |
#            index.js
#          generateReleaseNotes: true
#      - name: 创建 tag (Create tag)
#        uses: mathieudutour/github-tag-action@v6.2
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          custom_tag: alpha
#          tag_prefix: ''
#        continue-on-error: true
#      - name: Install jq
#        run: sudo apt-get install -y jq
#
#      - name: Print and format GitHub context
#        run: echo '${{ toJSON(github) }}' | jq '.'
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: 上传编译结果到 Artifact (Upload build result to Artifact)
#        uses: actions/upload-artifact@v4
#        with:
#          if-no-files-found: ignore
#          name: '${{ matrix.target }}'
#          path: |
#            ./src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*.exe
#            ./src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
#            ./src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb
#            ./src-tauri/target/${{ matrix.target }}/release/bundle/rpm/*.rpm
#  upload:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download Artifact
#        uses: actions/download-artifact@v4
#        with:
#          path: ./download
#          merge-multiple: true
#
#      - name: 上传编译结果到 pre-release (Upload build result to pre-release)
#        uses: ncipollo/release-action@v1
#        with:
#          tag: alpha
#          generateReleaseNotes: true
#          allowUpdates: true
#          removeArtifacts: true
#          prerelease: true
#          artifacts: |
#            ./download/**/*.*



#      - uses: actions/checkout@v4

#      - name: Sleep for 30 seconds
#        run: sleep 30s
#        shell: bash
#      - name: run docker
#        run: docker run --restart=always -v ./config.yml:/etc/bililive-go/config.yml -v ./videos:/srv/bililive -p 8080:8080 -d --name=zb chigusa/bililive-go
#
#
#      - name: stop docker
#        run: docker stop zb
#
#      - name: 上传编译结果到 Artifact (Upload build result to Artifact)
#        uses: actions/upload-artifact@v4
#        with:
#          name: video
#          path: ./videos
#      - uses: randomairborne/r2-release@main
#        with:
#          endpoint: ${{ secrets.S3_ENDPOINT }}
#          accesskeyid: ${{ secrets.S3_ACCESS_KEY_ID }}
#          secretaccesskey: ${{ secrets.S3_SECRET_ACCESS_KEY }}
#          bucket: 'test'
#          file: './README.md'
#          destination: '/foo/README.md'
#      - name: Upload file to R2
#        uses: magicwallet/r2-upload@main
#        with:
#          endpoint: ${{ secrets.S3_ENDPOINT }}
#          access_key_id: ${{ secrets.S3_ACCESS_KEY_ID }}
#          secret_access_key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
#          bucket: test
#          file: './README.md'
#          destination: 'foo/README.md'

#      - name: Create/Update tag
#        uses: rickstaa/action-create-tag@v1.7.2
#        with:
#          tag: v1.0.0
#          force_push_tag: true
#      - run: zip -r hub.zip current/.github
#
#      - name: 上传编译结果到 Artifact (Upload build result to Artifact)
#        working-directory: current
#        uses: actions/upload-artifact@v4
#        with:
#          name: hub
#          path: current/.github
#
#      - name: Create Release
#        uses: ncipollo/release-action@v1.14.0
#        with:
#          allowUpdates: true
#          artifacts: 'hub.zip'
#          tag: v1.0.0


#      - name: 开启 SSH 服务 (Start SSH service)
#        uses: lhotari/action-upterm@v1
#        with:
#          wait-timeout-minutes: 20
